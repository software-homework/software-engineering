package businesslogic.salesman;

import java.rmi.Naming;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import po.salesman.ImportPO;
import po.stockManage.CommodityPO;
import vo.salesman.ImportVO;
import vo.stockManage.CommodityVO;
import vo.stockManage.MessageVO;
import businesslogic.stockManage.CommodityBL;
import businesslogic.stockManage.MessageBL;
import businesslogicservice.finance.GetImportBL;
import businesslogicservice.salesman.CustomerBLService;
import businesslogicservice.salesman.ImportBLService;
import dataservice.salesman.ImportDataService;

public class ImportBL implements ImportBLService,businesslogic.stockManage.GetImport,businesslogicservice.manager.GetImport,GetImportBL{
	private ImportDataService data = null;
	SetMessage sm=new MessageBL();
	GetCommodity gc=new CommodityBL();
	public ImportBL(){
		try {
			data = (ImportDataService)Naming.lookup("rmi://localhost:9999/importdata");
		} catch (Exception e) {
			e.printStackTrace();
		} 
	}
//得到进货单编号
	public String getiID() {
		ArrayList<ImportPO> list = new ArrayList<ImportPO>();
		list = data.getDataI();
		Date dt=new Date();
	    SimpleDateFormat matter1=new SimpleDateFormat("yyyyMMdd");
	    int count=0;
	    for(ImportPO ipo:list){
	    	if(ipo.getID().substring(0, 3).equals("JHD")&&ipo.getID().substring(4, 12).equals(matter1.format(dt))){
	    		count++;
	    	}
	    }
	    if(count>=99999){
	    	return null;
	    }
	    else{
	    	return "JHD-"+(String)matter1.format(dt)+"-"+String.format("%05d",count);
	    }
	}
//得到进货退货单编号
	public String getirID() {
		ArrayList<ImportPO> list = new ArrayList<ImportPO>();
		list = data.getDataI();
		Date dt=new Date();
	    SimpleDateFormat matter=new SimpleDateFormat("yyyyMMdd");
	    int count=0;
	    for(ImportPO ipo:list){
	    	if(ipo.getID().substring(0, 5).equals("JHTHD")&&ipo.getID().substring(6, 14).equals(matter.format(dt))){
	    		count++;
	    	}
	    }
	    if(count>=99999){
	    	return null;
	    }
	    else{
	    	return "JHTHD-"+matter.format(dt)+"-"+String.format("%05d",count);
	    }
	}

	public boolean CheckI(ImportVO importvo) {
		ArrayList<CommodityPO> cpoList=new ArrayList<CommodityPO>();
		for(CommodityVO cvo:importvo.importList){
			CommodityPO cpo=new CommodityPO();
			gc.commodityVoToPo(cvo, cpo);
			cpoList.add(cpo);
		}
		ImportPO newIPO = new ImportPO(importvo.id,importvo.customer,importvo.repertory,importvo.user,cpoList,importvo.total,importvo.remakes,3);
		return data.insert(newIPO);
	}

	public ArrayList<ImportVO> ShowI() {
		ArrayList<ImportPO> list=new ArrayList<ImportPO>();
		list=data.getDataI();
		ArrayList<ImportVO> newList=new ArrayList<ImportVO>();
		for(ImportPO ipo:list){
			newList.add(this.ImportPOtoVO(ipo));
		}
		return newList;
	}
	
	public boolean approvalImport(String id,int approval){
		ArrayList<ImportPO> list=new ArrayList<ImportPO>();
		list=data.getDataI();
		ImportVO importvo=new ImportVO();
		for(ImportPO ipo:list){
			if(ipo.getID().equals(id)){
				ipo.setApproval(approval);
				data.update(ipo);
				importvo=this.ImportPOtoVO(ipo);
				break;
			}
		}
		if(importvo.approval==1){
			CustomerBLService cbl=new CustomerBL();
			if(importvo.id.substring(0, 3).equals("JHD")){
				cbl.updateCustomer(importvo.customer, 0, importvo.total);
				for(CommodityVO cvo:importvo.importList){
					if(gc.importChange(cvo)==false){
						for(ImportPO ipo:list){
							if(ipo.getID().equals(id)){
								ipo.setApproval(2);
								data.update(ipo);
								break;
							}
							
						}
						return false;
					}
					else{
						sm.add(new MessageVO("进货",cvo.commodityname,cvo.model,cvo.number,importvo.customer,false));
					}
				}
			}
			else{
				cbl.updateCustomer(importvo.customer, 0, -importvo.total);
				for(CommodityVO cvo:importvo.importList){
					cvo.number=-cvo.number;
					if(gc.importChange(cvo)==false){
						for(ImportPO ipo:list){
							if(ipo.getID().equals(id)){
								ipo.setApproval(2);
								data.update(ipo);
								break;
							}
						}
						return false;
					}
					else{
						sm.add(new MessageVO("进货退货",cvo.commodityname,cvo.model,cvo.number,importvo.customer,false));
					}
				}
			}
		}
		
		return true;
	}
	
	public void updateImport(ImportVO importvo){
		ArrayList<CommodityPO> cpolist=new ArrayList<CommodityPO>();
		for(CommodityVO cvo:importvo.importList){
			CommodityPO cpo=new CommodityPO();
			gc.commodityVoToPo(cvo, cpo);
			cpolist.add(cpo);
		}
		ImportPO newIPO = new ImportPO(importvo.id,importvo.customer,importvo.repertory,importvo.user,cpolist,importvo.total,importvo.remakes,importvo.approval);
		data.update(newIPO);
	}
	
	public ArrayList<ImportVO> getUncheckedImport(){
		ArrayList<ImportPO> list=new ArrayList<ImportPO>();
		list=data.getDataI();
		ArrayList<ImportVO> newList=new ArrayList<ImportVO>();
		for(ImportPO ipo:list){
			if(ipo.getApproval()==3){
				newList.add(this.ImportPOtoVO(ipo));
			}
		}
		return newList;
	}
	
	public ArrayList<ImportVO> getCheckedImport(){
		ArrayList<ImportPO> clist=new ArrayList<ImportPO>();
		clist=data.getDataI();
		ArrayList<ImportVO> newcList=new ArrayList<ImportVO>();
		for(ImportPO ipo:clist){
			if(ipo.getApproval()==1){
				newcList.add(this.ImportPOtoVO(ipo));
			}
		}
		return newcList;
	}
	
	public ImportVO findImport(String ID){
		ArrayList<ImportPO> list=new ArrayList<ImportPO>();
		list=data.getDataI();
		for(ImportPO ipo:list){
			if(ipo.getID().equals(ID)){
				return this.ImportPOtoVO(ipo);
			}
		}
		return null;
	}
	
	private ImportVO ImportPOtoVO(ImportPO ipo){
		ArrayList<CommodityVO> cvoList=new ArrayList<CommodityVO>();
		for(CommodityPO cpo:ipo.getImportList()){
			cvoList.add(gc.commodityPoToVo(cpo));
		}
		ImportVO newIVO = new ImportVO();
		newIVO.approval=ipo.getApproval();
		newIVO.importList=cvoList;
		newIVO.customer=ipo.getCustomer();
		newIVO.id=ipo.getID();
		newIVO.remakes=ipo.getRemakes();
		newIVO.repertory=ipo.getRepertory();
		newIVO.total=ipo.getTotal();
		newIVO.user=ipo.getUser();
		return newIVO;
	}


}
